# YM/TPT 
# Automatic generation of an ioring of dummy I/O terminals around  the core.
# An io placement file is generated
# call : tpt_gen_dummy_ioring <Layer of top/bottom pins>
#                             <Layer of left/right pins>
#                             <IO file to create>

proc tpt_gen_dummy_ioring {module tbLayer lrLayer fdest} {
set chan [open $fdest w]

# Choose the bottom/top and left/right layers
# Choose the term width according to choosen layer
set ptbLayer  [get_db layers -if {.route_index==$tbLayer}]
set tbTermWidth [get_db $ptbLayer .width]
# Choose the term width according to choosen layer
set plrLayer  [get_db layers -if {.route_index==$lrLayer}]
set lrTermWidth [get_db $plrLayer .width]
# Compute the term height...
set tbTermDepth [expr $tbTermWidth]
set lrTermDepth [expr $lrTermWidth]


# Get all the ports of the top cell
set designTermList [get_db ports .name]
# Get ports number
set designTermNum  [llength $designTermList]
# Get core box size
set core_bbox [split [lindex [get_db design:${module} .core_bbox] 0]]
set coreBox_llx [lindex $core_bbox 0]
set coreBox_lly [lindex $core_bbox 1]
set coreBox_urx [lindex $core_bbox 2]
set coreBox_ury [lindex $core_bbox 3]
set coreBoxX [expr $coreBox_urx - $coreBox_llx]
set coreBoxY [expr $coreBox_ury - $coreBox_lly]
# Compute the total length
set coreLength [expr 2*($coreBoxX+$coreBoxY)]
# Compute the distance beetween terminals 
set termDist [expr {floor(40*$coreLength/$designTermNum)/40}]
# Compute the starting offset
set offset  [expr $coreBox_llx+$termDist/2]
set curBorder "top"
set curLayer $tbLayer
set curWidth $tbTermWidth 
set curDepth $tbTermDepth
# Print the top of file
puts $chan "###############################################################"
puts $chan "# Generated by: tpt_gen_ioring script                         #"
puts $chan "# Evenly distributed dummy I/O pins around the core           #"
puts $chan "###############################################################"
puts $chan ""
puts $chan "(globals"
puts $chan "    version = 3"
puts $chan "    io_order = default"
puts $chan ")"
puts $chan "(iopin"
puts $chan "    ($curBorder"
# Loop on the terminals
foreach term $designTermList {
  puts $chan "    (pin name=\"$term\" offset=$offset layer=$curLayer width=$curWidth depth=$curDepth place_status=fixed )"
  set offset [expr $offset + $termDist]
  if {$curBorder == "top"} {
      if {$offset > $coreBox_urx} {
          puts $chan "    )"
          set curBorder  "right"
          puts $chan "    ($curBorder"
          set termDist  [expr -$termDist]
          set offset  [expr round($coreBox_ury+$termDist/2)]
          set curLayer $lrLayer
          set curWidth $lrTermWidth 
          set curDepth $lrTermDepth
      }
  } elseif {$curBorder == "right"} {
      if {$offset < $coreBox_lly} {
          puts $chan "    )"
          set curBorder  "bottom"
          puts $chan "    ($curBorder"
          set offset  [expr round($coreBox_urx+$termDist/2)]
          set curLayer $tbLayer
          set curWidth $tbTermWidth 
          set curDepth $tbTermDepth
     }
  } elseif {$curBorder == "bottom"} {
      if {$offset < $coreBox_llx} {
          puts $chan "    )"
          set curBorder  "left"
          puts $chan "    ($curBorder"
          set termDist  [expr -$termDist]
          set offset  [expr round($coreBox_lly+$termDist/2)]
          set curLayer $lrLayer
          set curWidth $lrTermWidth 
          set curDepth $lrTermDepth
     }
  }
}
puts $chan "    )"
puts $chan ")"
close $chan
}





